---
import { langs, useTranslation } from "../../i18n/utils";
import type { BosKonfYear } from "../../program/program";
import { getProgram } from "../../program/programUtils";
const t = useTranslation(Astro.url);

interface Props {
  year: BosKonfYear;
  language: keyof typeof langs;
}

const { year, language } = Astro.props;

function formatDate(date: string) {
  if (date) {
    return Intl.DateTimeFormat(language, {
      month: "long",
      day: "numeric",
      year: "numeric",
    }).format(new Date(date));
  } else {
    return "TBD";
  }
}

const program = await getProgram(year, language);
---

<div class="content">
  <div class="dateCont">
    <a href="/ical.ics">
      <div class="date">
        <img src="/calendar.svg" alt="calendar icon" />
        <span>{formatDate(program.date)}</span>
      </div>
    </a>
    <a href={program.locationUrl} target="_blank">
      <div class="location">
        <img src="/location.svg" alt="location icon" />
        <span>{program.location}</span>
      </div>
    </a>
  </div>

  <h2>{t("main.title")}</h2>
  <h3>{t("main.subTitle")}</h3>
  <p>
    {t("main.description")}
  </p>

  <button disabled>
    {t("main.signUp")}
    <img src="/arrow-up-right.svg" alt="arrow up right icon" />
  </button>
</div>

<style>
  .content {
    color: #f1f1f1;
    padding: 5rem 2rem;
    max-width: var(--content-width);
    margin: 0 auto;
  }

  .dateCont {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }
  .dateCont .date,
  .dateCont .location {
    position: relative;
    text-wrap: nowrap;

    img {
      height: 1rem;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }
    span {
      margin: 0 0 0 1.5rem;
    }
  }
  .dateCont .date {
    background-color: #00f5c9;
    padding: 0.25rem 1rem;
    border-radius: 20rem;
    color: #1c1f20;
  }
  .dateCont .location {
    border: 1px solid rgba(255, 255, 255, 0.5);
    padding: 0.25rem 1rem;
    border-radius: 20rem;
  }

  /* hero text */
  h2 {
    font-size: 3.5rem;
    font-weight: 600;
    line-height: 7rem;
  }
  p {
    width: 90%;
    font-size: 1.125rem;
  }
  button {
    background-color: #12e8be;
    border: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    padding: 1rem 2rem;
    border-radius: 20rem;
    margin: 4rem 0 0 0;
    color: rgba(40, 40, 40, 0.9);
    font-size: 1.25rem;
    font-weight: 600;
    transition-duration: 0.25s;
    cursor: pointer;
    border: 2px solid rgba(0, 0, 0, 0.1);

    img {
      opacity: 0.75;
    }
  }
  button:hover {
    background-color: #3ff1ce;
    border-color: rgba(255, 255, 255, 0.2);
  }
  button:disabled {
    cursor: default;
    background-color: #12e8be;
    border-color: rgba(0, 0, 0, 0.1);
  }

  @media only screen and (min-width: 768px) {
    h2 {
      font-size: 6rem;
      font-weight: 600;
      margin-bottom: 0.5em;
    }
  }
</style>
