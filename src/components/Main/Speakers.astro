---
import type { Speaker } from "../../program/program";
import { useTranslation, type langs } from "../../i18n/utils";

interface Props {
  speakers: Speaker[];
  language: keyof typeof langs;
}

const { speakers, language } = Astro.props;
const t = useTranslation(undefined, language);
---

<div class="cont">
  <div class="titleCont">
    <div class="details">
      <h2>{t("speakers.title")}</h2>
    </div>
  </div>
  <div class="speakersCont">
    {
      speakers.map((speaker) => (
        <div class="cardCont">
          {speaker.imageUrl && (
            <img
              class="pfp"
              src={speaker.imageUrl}
              alt={speaker.name + " picture"}
            />
          )}
          <span class="speakerInfo">
            <h3>{speaker.name}</h3>
            <p>{speaker.description}</p>
          </span>
        </div>
      ))
    }
  </div>
</div>

<style>
  .cont {
    color: #f1f1f1;
    padding: 0 2rem;
    max-width: var(--content-width);
    margin: 0 auto;
  }
  .titleCont {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .titleCont .details {
    width: 100%;
  }
  .titleCont .details h2 {
    font-size: 3.5rem;
    line-height: 4rem;
  }
  .titleCont .details p {
    margin: 0 0 2rem 0;
  }

  /* speakers */
  .speakersCont {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 300px));
    grid-auto-flow: row;
    gap: 3rem;
    justify-content: space-between;
  }
  .speakersCont .cardCont {
    position: relative;
    transition-duration: 0.25s;
    width: 300px;
    height: 400px;
    background-color: #31313b;
    border-radius: 34px;
  }
  .speakersCont .cardCont img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 34px;
  }
  .speakersCont .cardCont:hover {
    transform: rotate(5deg);
  }

  .speakersCont .speakerInfo {
    display: flex;
    flex-direction: column;
    position: absolute;
    bottom: 4%;
    left: 10%;
    gap: 0;
  }
  .speakersCont .speakerInfo h3 {
    font-size: 1.5rem;
    font-weight: 500;
    margin: 0;
  }

  .speakersCont .speakerInfo p {
    font-size: 0.75rem;
    font-weight: 500;
  }

  @media only screen and (min-width: 768px) {
    .titleCont {
      flex-direction: row;
    }
    .titleCont .details {
      width: 70%;
    }
    .titleCont .details h2 {
      font-size: 5rem;
      line-height: 2rem;
    }

    .speakersCont {
      flex-wrap: nowrap;
    }
  }
</style>
